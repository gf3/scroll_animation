// Generated by CoffeeScript 1.6.3
(function() {
  var __slice = [].slice;

  window.requestAnimationFrame = (function() {
    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(callback) {
      return window.setTimeout(callback, 1000 / 60);
    };
  })();

  this.ScrollAnimation = (function() {
    var STATE_ANIMATING, STATE_IDLE, documentHeight, lastTop, run, update, windowHeight;

    windowHeight = window.innerHeight;

    documentHeight = null;

    lastTop = null;

    update = function() {
      var anim, scrollTop, _i, _len, _ref;
      scrollTop = document.documentElement.scrollTop || document.body.scrollTop;
      if (scrollTop === lastTop) {
        return;
      }
      _ref = ScrollAnimation.animations;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        anim = _ref[_i];
        if (anim != null) {
          anim.animate(scrollTop, windowHeight, documentHeight);
        }
      }
      return lastTop = scrollTop;
    };

    run = function() {
      requestAnimationFrame(run);
      return update();
    };

    ScrollAnimation.animations = [];

    ScrollAnimation.register = function() {
      var args;
      args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      if (args[0] instanceof ScrollAnimation) {
        return this.animations.push(args[0]);
      }
    };

    ScrollAnimation.remove = function(instance) {
      var idx;
      idx = this.animations.indexOf(instance);
      if (idx < 0) {
        return null;
      }
      return this.animations.splice(idx, 1);
    };

    ScrollAnimation.start = function() {
      ScrollAnimation.refresh();
      $(window).on("resize", ScrollAnimation.refresh);
      if (Modernizr.touch) {
        document.addEventListener("touchstart", update);
        document.addEventListener("touchmove", update);
        document.addEventListener("touchend", update);
      }
      return run();
    };

    ScrollAnimation.refresh = function() {
      var anim, _i, _len, _ref;
      windowHeight = window.innerHeight;
      documentHeight = $(document).height();
      lastTop = 0;
      _ref = ScrollAnimation.animations;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        anim = _ref[_i];
        anim.resize();
      }
      return this;
    };

    STATE_IDLE = 0;

    STATE_ANIMATING = 1;

    function ScrollAnimation(_arg) {
      var offset;
      this.el = _arg.el, this.animation = _arg.animation, this.reset = _arg.reset, offset = _arg.offset;
      this.offset = offset || function() {
        return 0;
      };
      offset = this.offset(windowHeight);
      this.resize(windowHeight);
      this.state = STATE_IDLE;
    }

    ScrollAnimation.prototype.resize = function(viewportHeight) {
      var top;
      top = this.el.offsetTop;
      this.start = top + this.offset(viewportHeight);
      this.height = this.el.offsetHeight;
      return this.end = this.height + this.start;
    };

    ScrollAnimation.prototype.animate = function(scrollTop, windowHeight, documentHeight) {
      if (!(this.start > scrollTop && this.end < (scrollTop + windowHeight))) {
        if (this.state === STATE_ANIMATING) {
          if (typeof this.reset === "function") {
            this.reset();
          }
          this.state = STATE_IDLE;
        }
      }
      this.state = STATE_ANIMATING;
      return this.animation.apply(this, Array.prototype.slice.call(arguments));
    };

    return ScrollAnimation;

  })();

}).call(this);

/*
//@ sourceMappingURL=scroll_animation.map
*/
